name: Version Update manifest.json

on:
  release:
    types: [created]
  workflow_dispatch:
    inputs:
      tag:
        description: 'Please enter release tag to update (e.g. v1.0.x)'
        required: true

permissions:
  contents: write
  actions: none

env:
  MANIFEST_PATH: custom_components/daily_hadith/manifest.json

jobs:
  fix-manifest:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout the repo
      uses: actions/checkout@v3
      with:
        fetch-depth: 0  # Required to move tags

    - name: Get tag version
      id: get_version
      run: |
        TAG="${{ github.event.release.tag_name || github.event.inputs.tag }}"
        CLEAN="${TAG#v}"
        echo "tag=$TAG" >> "$GITHUB_OUTPUT"
        echo "version=$CLEAN" >> "$GITHUB_OUTPUT"

    - name: Check if manifest version matches tag
      id: check_version
      run: |
        CURRENT_VERSION=$(jq -r '.version' "$MANIFEST_PATH")
        TAG_VERSION="${{ steps.get_version.outputs.version }}"

        echo "Current: $CURRENT_VERSION"
        echo "Expected: $TAG_VERSION"

        if [ "$CURRENT_VERSION" = "$TAG_VERSION" ]; then
          echo "match=true" >> "$GITHUB_OUTPUT"
        else
          echo "match=false" >> "$GITHUB_OUTPUT"
        fi

    - name: Update manifest.json version
      if: steps.check_version.outputs.match == 'false'
      run: |
        jq '.version = "${{ steps.get_version.outputs.version }}"' "$MANIFEST_PATH" > tmp.json && mv tmp.json "$MANIFEST_PATH"
        echo "Updated manifest.json to version ${{ steps.get_version.outputs.version }}"

    - name: Commit the update
      if: steps.check_version.outputs.match == 'false'
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        git add "$MANIFEST_PATH"
        git commit -m "Updated manifest.json to version ${{ steps.get_version.outputs.version }}"

    - name: Force update the tag to the fixed commit
      if: steps.check_version.outputs.match == 'false'
      run: |
        git tag -f "${{ steps.get_version.outputs.tag }}"
        git push origin --force tag "${{ steps.get_version.outputs.tag }}"
        echo "âœ… Tag updated to match manifest.json"
